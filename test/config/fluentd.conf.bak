# cluster log
<source>
   @type  monitor_agent
   bind  0.0.0.0
   port  24220
</source>

<source>
   @type  tail
   path  /var/log/containers/*.log
   pos_file  /fluentd/etc/log/fluentd-cluster-logging.pos
   time_format  %Y-%m-%dT%H:%M:%S
   tag  cluster.*
   format  json
   read_from_head  true
</source>

<filter  cluster.**>
   @type  kubernetes_metadata
   merge_json_log  true
   preserve_json_log  true
</filter>

<filter cluster.**>
  @type record_transformer
  <record>
    tag ${tag}
    </record>
</filter>

<match  cluster.**> 
    @type 
    
    buffer_type file
    buffer_path /fluentd/etc/buffer/cluster.buffer
    buffer_queue_limit 128
    buffer_chunk_limit 256m
    max_retry_wait 30
    disable_retry_limit
    num_threads 8
    slow_flush_log_threshold 40.0
</match>

# namespace log
# service log
<source>
  @type tail
  path /var/log/volumes/*/*/*/apache2/* # path is /var/log/volumes/<namespace>/<stack>/<service>/<type>/*.log
  pos_file /fluentd/etc/log/apache2.log.pos
  tag servicelog.*
  format /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)?$/ 
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  path /var/log/volumes/*/*/*/nginx/* # path is /var/log/volumes/<namespace>/<stack>/<service>/<type>/*.log
  pos_file /fluentd/etc/log/nginx.log.pos
  tag servicelog.*
  format /^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)") (?<gzip_ratio>[^ ]*)?$/
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  path /var/log/volumes/*/*/*/syslog/* # path is /var/log/volumes/<namespace>/<stack>/<service>/<type>/*.log
  pos_file /fluentd/etc/log/syslog.log.pos
  tag servicelog.*
  format syslog
</source>

<source>
  @type tail
  path /var/log/volumes/*/*/*/json/* # path is /var/log/volumes/<namespace>/<stack>/<service>/<type>/*.log
  pos_file /fluentd/etc/log/json.log.pos
  tag servicelog.*
  format json
</source>

<filter servicelog.**>
  @type record_transformer
  <record>
    tag ${tag}
    namespace ${tag_parts[4]}
    stack_name ${tag_parts[5]}
    service_name ${tag_parts[6]}
    log_format ${tag_parts[7]}
  </record>
</filter>

